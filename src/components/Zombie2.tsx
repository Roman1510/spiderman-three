/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Group } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    parasiteZombie003: THREE.SkinnedMesh
    parasiteZombie003_1: THREE.SkinnedMesh
    mixamorigHips: THREE.Bone
  }
  materials: {
    ['parasitezombie_Material1.003']: THREE.MeshPhysicalMaterial
    ['parasitezombie_Material.003']: THREE.MeshPhysicalMaterial
  }
}

export function Zombie2(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null)
  const { nodes, materials, animations } = useGLTF('/zombie.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions) {
      actions['attack']?.play()
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene2">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group name="parasiteZombie">
            <skinnedMesh
              name="parasiteZombie003"
              geometry={nodes.parasiteZombie003.geometry}
              material={materials['parasitezombie_Material1.003']}
              skeleton={nodes.parasiteZombie003.skeleton}
            />
            <skinnedMesh
              name="parasiteZombie003_1"
              geometry={nodes.parasiteZombie003_1.geometry}
              material={materials['parasitezombie_Material.003']}
              skeleton={nodes.parasiteZombie003_1.skeleton}
            />
          </group>
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/zombie.glb')
