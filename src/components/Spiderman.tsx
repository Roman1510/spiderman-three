/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Props to author: Spiderware (https://sketchfab.com/Spiderware)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Model was changed by @Roman1510, but the original resides with the following link
Source: https://sketchfab.com/3d-models/spider-man-spider-man-no-way-home-2cb11e591cc44357bffc6e23931a78e2
Title: Spider-man (Spider-man: No way Home)
*/

import { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Group, SkinnedMesh, MeshPhysicalMaterial, Bone } from 'three'
import useCharacterControls from '../hooks/useCharacterControls'
import { useControls } from 'leva'
import { animationNames } from '../consts/animations'

type GLTFResult = GLTF & {
  nodes: {
    hero_spiderman01_s08_01: SkinnedMesh
    hero_spiderman01_s08_02: SkinnedMesh
    hero_spiderman01_s08_03: SkinnedMesh
    spider_wp003: THREE.SkinnedMesh
    spider_wp02: THREE.SkinnedMesh
    hero_spiderman01_S08: Bone
  }
  materials: {
    SpiderMan_web02: THREE.MeshPhysicalMaterial
    hero_spiderman01_s08_01: MeshPhysicalMaterial
    hero_spiderman01_s08_02: MeshPhysicalMaterial
    hero_spiderman01_s08_03: MeshPhysicalMaterial
  }
}

// type ActionName =
//   | 'atk01'
//   | 'atk02'
//   | 'dash'
//   | 'die'
//   | 'hit'
//   | 'idle'
//   | 'skill01'
//   | 'skill02'
//   | 'skill03'
//   | 'skill04'
//   | 'skill05-01'
//   | 'skill05-02'
//   | 'skill05-03'
//   | 'skill06-cam'
//   | 'skill06'
//   | 'stun'
//   | 'succ_cam'
//   | 'wait'
//   | 'walk'

export default function Spiderman(props: JSX.IntrinsicElements['group']) {
  const group = useRef<Group>(null)
  const { nodes, materials, animations } = useGLTF(
    '/new-costume.glb'
  ) as GLTFResult
  const { actions } = useAnimations(animations, group)

  useCharacterControls(group, animations)

  //debug{
  const { timeScale } = useControls('Speed', {
    timeScale: {
      value: 1,
      min: 0,
      max: 3,
      step: 0.1,
      label: 'Time Scale',
    },
  })

  useEffect(() => {
    Object.values(actions).forEach((action) => {
      action!.setEffectiveTimeScale(timeScale)
    })
  }, [actions, timeScale])

  // Adjust Leva panel controls for animations
  animationNames.forEach((fullName) => {
    const name = fullName.slice(39, 52)
    useControls('animations', {
      [fullName]: {
        value: false,
        label: name,
        onChange: (value) => handleAnimationPlay(fullName, value),
      },
    })
  })

  const handleAnimationPlay = (fullName: string, play: boolean) => {
    // Stop all animations first
    Object.values(actions).forEach((action) => {
      action!.stop()
    })

    // Play the selected animation
    if (play) {
      actions[fullName]?.reset().play()
    }
  }

  return (
    <group receiveShadow scale={10} ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
          <skinnedMesh
            name="hero_spiderman01_s08_01"
            geometry={nodes.hero_spiderman01_s08_01.geometry}
            material={materials.hero_spiderman01_s08_01}
            skeleton={nodes.hero_spiderman01_s08_01.skeleton}
          />
          <skinnedMesh
            name="hero_spiderman01_s08_02"
            geometry={nodes.hero_spiderman01_s08_02.geometry}
            material={materials.hero_spiderman01_s08_02}
            skeleton={nodes.hero_spiderman01_s08_02.skeleton}
          />
          <skinnedMesh
            name="hero_spiderman01_s08_03"
            geometry={nodes.hero_spiderman01_s08_03.geometry}
            material={materials.hero_spiderman01_s08_03}
            skeleton={nodes.hero_spiderman01_s08_03.skeleton}
          />
          {/* <skinnedMesh
            name="spider_wp003"
            geometry={nodes.spider_wp003.geometry}
            material={materials.SpiderMan_web02}
            skeleton={nodes.spider_wp003.skeleton}
          />
          <skinnedMesh
            name="spider_wp02"
            geometry={nodes.spider_wp02.geometry}
            material={materials.SpiderMan_web02}
            skeleton={nodes.spider_wp02.skeleton}
          /> */}
          <primitive object={nodes.hero_spiderman01_S08} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/new-costume.glb')
